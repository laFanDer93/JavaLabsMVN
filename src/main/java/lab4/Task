

Разработать иерархию классов:


Перечень классов:

    Employee - работник. Основной родительский класс для всех разновидностей работников.
    Pesonal - работник по найму с оплатой за фактически отработанное время. Имеет ставку за час.
    Engineer - инженер. Имеет ставку и оплату за час + бонусы от выполняемого проекта.
    Manager - менеджер. Оплату получает из денег проекта, которым руководит.
    Cleaner - уборщица.
    Driver - водитель.
    Programmer - инженер-программист.
    TeamLeader - ведущий программист.
    Tester - инженер по тестированию.
    ProjectManager - проектный менеджер.
    SeniorManager - руководитель направления.

Перечень интерфейсов:

    WorkTime - расчет оплаты исходя из отработанного времени (часы умножаются на ставку).
    Project - расчет оплаты исходя из участия в проекте (бюджет проекта делится пропорционально персональному вкладу).
    Heading - расчет оплаты исходя из руководства (количество подчиненных).

Класс Employee

Этот, наиболее важный класс, должен содержать поля:

    id - идентификационный номер.
    name - ФИО.
    worktime - отработанное время.
    payment - заработная плата.

Заработная плата работникам начисляется, исходя из должности, почасовой ставки и участию в проектах.
Файл данных

Подготовить текстовый файл со списком сотрудников. Информация о каждом сотруднике должна включать:

    id - идентификационный номер.
    name - ФИО сотрудника.
    position - должность.
    base - базовая ставка руб./час (если нужна).
    project - название проекта (если нужен).

Приложение

Написать демонстрационное приложение, которое создает штат сотрудников на основе данных из
текстового файла и рассчитывает им зарплату, исходя из отработанного времени и участия в проектах.
Информация о сотрудниках, об отработанном времени и заработной плате выводится на экран в виде таблицы.
